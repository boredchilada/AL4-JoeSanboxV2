name: Build and Push Docker Image

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Verify file structure
        run: |
          echo "Verifying file structure"
          ls -la
          echo "SERVICE_MANIFEST contents:"
          cat service_manifest.yml

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Extract service version from manifest
        id: extract_version
        run: |
          VERSION=$(grep "^version:" service_manifest.yml | cut -d ' ' -f 2)
          echo "SERVICE_TAG=$VERSION" >> $GITHUB_ENV
          echo "Extracted version: $VERSION"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Set Docker tags based on version pattern
        id: set_tags
        run: |
          # Get repository name in lowercase (GitHub Container Registry requires lowercase)
          REPO_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          
          # Always include the version tag
          TAGS="ghcr.io/${REPO_NAME}:${{ env.SERVICE_TAG }}"
          
          # Check if this is a dev or stable version based on the version string
          if [[ "${{ env.SERVICE_TAG }}" == *".dev"* ]]; then
            # This is a development version - add the 'latest-dev' tag
            TAGS="$TAGS,ghcr.io/${REPO_NAME}:latest-dev"
            echo "Building development version with 'latest-dev' tag"
          elif [[ "${{ env.SERVICE_TAG }}" == *".stable"* ]]; then
            # This is a stable version - add the 'latest' tag
            TAGS="$TAGS,ghcr.io/${REPO_NAME}:latest"
            echo "Building stable version with 'latest' tag"
          else
            # This is neither dev nor stable - just use the version tag
            echo "Version doesn't match dev or stable pattern, using only version tag"
          fi
          
          echo "DOCKER_TAGS=$TAGS" >> $GITHUB_ENV
          echo "Tags to be applied: $TAGS"

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_TAGS }}